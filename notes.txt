NOTES

<body>
  <form action ="/button_click"
    <button>Click me</button>
  </form>
</body>

Anything inside the form gets sent to the server. It has an action attribute
which takes a path as a value. This doesn't send any data yet, but it does
kick off a request.

Let's say we're using Sinatra and the above is in an index.erb:

get '/button_click' do
  "<h1>You have clicked the button.</h1>"
end

get '/' do
  web :index
end

When you click on the button, the h1 text will appear!

<body>
  <form action ="/button_click">
    <input type = "text" name = "name"
    <button>Click me</button>
  </form>
</body>

get '/button_click' do
  "<h1>Hello, #{params[:name]}. You have clicked the button.</h1>"
end

get '/' do
  web :index
end

What if we're using an erb?

get '/button_click' do
  web :name, locals: {name: params[:name]}
end

inside name.erb:

<body>
  <h1>Hello, <%=name%></h1>
</body>

Okay, but what about JavaScript?

app.get('/button_click', function(request,response){
  response.render('name.ejs', {name: request.query.name};)
});

Instead of using a params hash, JavaScript treats it with a query property.

Okay, now ths is relevant for HW:

views/index.erb
<body>
  <% if name %>
    <h1>Hello, <%=name%></h1>
  <%end%>
  <form action = "/">
    <input type = "text" name = "name">
  </form>
</body>

get '/' do
erb :index, locals: {name: params[:name]}
end
